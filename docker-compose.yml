# This docker-compose file creates a network with two services:
# db: MySQL database service
# phpmyadmin: PHPMyAdmin service for managing the database

services:
  db:
    # Use official MySQL image
    image: mysql
    # Restart the service unless explicitly stopped
    restart: unless-stopped
    # Set the root password for MySQL
    environment:
      MYSQL_ROOT_PASSWORD: password
    # Use a volume to persist the database data
    volumes:
      - db:/var/lib/mysql
    # Expose the port 3306 for MySQL
    ports:
      - 3306:3306
    # Add the service to the 'microservices-net' network
    networks:
      - microservices-net
    container_name: db

    
  phpmyadmin:
    # Use official PHPMyAdmin image
    image: phpmyadmin
    restart: unless-stopped
    # Expose the port 5050 for PHPMyAdmin
    ports:
      - 5050:80
    # Set the environment variables for PHPMyAdmin
    environment:
      PMA_ARBITRARY: 1
      PMA_HOST: db
      PMA_PORT: 3306
      MYSQL_ROOT_PASSWORD: password
    networks:
      - microservices-net

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 2181:2181
    networks:
      - microservices-net

  kafka:
    image: apache/kafka:latest
    container_name: kafka
    ports:
      - 9092:9092
    depends_on:
      - zookeeper
    networks:
      - microservices-net

  config:
    image: configserver:latest
    container_name: configserver
    ports: 
      - 8888:8888
    networks:
      - microservices-net

  discovery:
    image: discovery-server:latest
    container_name: discoveryserver
    ports: 
      - 8761:8761
    networks:
      - microservices-net
    depends_on:
      - config
    environment:
      - SPRING_CONFIG_IMPORT=optional:configserver:http://configserver:8888
      

  mail-dev:
    image: maildev/maildev
    container_name: maildev
    ports:
      - 1080:1080
      - 1025:1025

  user:
    image: user_app
    ports:
      - 8090:8090
    networks:
      - microservices-net
    depends_on:
      - config
      - discovery

  flight:
    image: flight_app
    ports:
      - 8092:8092
    networks:
      - microservices-net
    depends_on:
      - config
      - discovery

  reservation:
    image: reservation_app
    ports:
      - 8091:8091
    networks:
      - microservices-net
    depends_on:
      - config
      - discovery

networks:
  microservices-net:
    # Use bridge network driver
    driver: bridge
volumes:
  db:
